{
    "title": "GetX Test",
    "blueprint": {
        "objects": {
            "obj1": {
                "a": "a1",
                "b": 2,
                "action1": "_b2 | (_a1 ≔ a) ⋀ τ(_a1) ⋀ ↲(_b2 + b)",
                "action2": "↲(action1(3))"
            },
            "obj3": {
                "b": 4
            },
            "obj2": {
                "extending": [
                    "obj3",
                    "obj1"
                ],
                "a": "a2",
                "action1": "_b2 | (_a1 ≔ a) ⋀ τ(_a1) ⋀ ↲(_b2 + b * 2)"
            }
        }
    },
    "patterns": {
        "facts": {
            "objStack": [],
            "a": "a3",
            "b": 12,
            "title": "Sirius Geography",
            "dashBoard": {
                "title": "World Statistic Data",
                "items": {
                    "population": {
                        "icon": "population",
                        "label": "Population"
                    },
                    "pollution": {
                        "icon": "pollution",
                        "label": "Pollution"
                    },
                    "viruses": {
                        "icon": "viruses",
                        "label": "Covid 19"
                    }
                }
            },
            "patHeader": [
                "hratio",
                "wratio",
                "color",
                "radius",
                "alignment",
                "size"
            ],
            "rowColHeader": [
                "crossAxisAlignment",
                "mainAxisAlignment",
                "mainAxisSize",
                "verticalDirection"
            ],
            "male": [
                "Benjamin",
                "Damian",
                "Severin"
            ],
            "female": [
                "Kaethi",
                "Tabea"
            ],
            "childrenOf": {
                "Yeung": [
                    "Benjamin",
                    "Damian",
                    "Tabea",
                    "Severin"
                ],
                "Kaethi": [
                    "Benjamin",
                    "Damian",
                    "Tabea",
                    "Severin"
                ],
                "Benjamin": [
                    "Samuel",
                    "Joanna"
                ],
                "Damian": [
                    "Kayla",
                    "Jamie"
                ]
            }
        },
        "clauses": {
            "startMain": "(_title ≔ title) ⋀ ↲(Φ(Scaffold, {_appBar: Φ(AppBar), _body: dashBoard(dashBoard['title'], dashBoard['items'])}))",
            "dashBoard": "_title, _items | (∃(_item) ∈ _items) ⋀ (∄(_item['description']) ⋀ ↲(iconRowPanel)) ⋁ ↲(columnPanel)",
            "multi": "_map | ((∃(_clause) ∈ {clause1, clause2, clause3, clause4}) ⋀ (_result ≔ _clause) ⋀ ↲(_result))",
            "action1": "_b1 | (_a1 ≔ a) ⋀ τ(_a1) ⋀ ↲(_b1 + b + b)",
            "action2": "↲(action1(5))",
            "mainView": "setBlueprint() ⋀ (_obj ≔ obj2) ⋀ (_a2 ≔ _obj['action2']) ⋀ (_b1 ≔ _a2) ⋀ τ(_b1) ⋀ (_b1 ≔ action2) ⋀ τ(_b1)  ⋀ ↲(Φ(getxHome))",
            "mainView1": "((∀(_re) ∈ [3‥1]) ⋀ τ('_re')) ⋀ ↲(Φ(getxHome))",
            "mainAppend1": "append1([1,2], [3,4,5], _re) ⋀ τ('_re') ⋀ ↲(Φ(getxHome))",
            "mainPassBack": "(_re ≔ 'a') ⋀ passBack ⋀ τ('_re') ⋀ τ('_y') ⋀ ↲(Φ(getxHome))",
            "passBack": "_re, _y | (_re ≔ 'b') ⋀ (_y ≔ 'c')",
            "mainAppend": "(_re ≔ append([1,2], [3,4,5])) ⋀ τ('_re') ⋀ ↲(Φ(getxHome))",
            "append": "_x, _y | ((∃(_x) ⋀ (_x0 ≪ _x) ⋀ (_z ≔ append(_x, _y)) ⋀ τ('_x0') ⋀ τ('_z') ⋀ (_x0 ≫ _z)) ⋁ ((_z ≔ _y) ⋀ τ('_z'))) ⋀ ↲(_z)",
            "append1": "_x, _y, _z | (∃(_x) ⋀ (_x0 ≪ _x) ⋀ append1(_x, _y, _z) ⋀ τ('_x0') ⋀ τ('_z') ⋀ ↲(_x0 ≫ _z)) ⋁ ((_z ≔ _y) ⋀ ↲(τ('_z')))",
            "mainExist": "((∄(_re) ⋀ (_re ≔ 'a') ⋀ ∃(_re)) ⋁ (_re ≔ 'b')) ⋀ τ('_re') ⋀ ↲(Φ(getxHome))",
            "mainAssign": "(_re ≔ {a: 'aaa', b: 'bbb', c: 'ccc'}) ⋀ (_re['b'] ≔ 'ddd') ⋀ τ('_re') ⋀ ↲(Φ(getxHome))",
            "mainText": "(_re ≔ ('aaa + ' + 'bbb * ' + \"ccc\")) ⋀ τ('_re') ⋀ ↲(Φ(getxHome))",
            "mainTest": "(_re ≔ setTest({_r: [], _n: 10})) ⋀ τ('_re') ⋀ ↲(Φ(getxHome))",
            "setTest": "_r, _n | ((∀(_m0) ∈ [1, -2, 3]) ⋀ τ('_m0') ⋀ (_m0 > 0) ⋀ ((∀(_m1) ∈ [4, -1, -2, 5]) ⋀  τ('_m1') ⋀ (_m1 < 0) ⋀ (_l ≔ [_m0, _m1])) ⋀ τ('_l') ⋀ (_r ≪ _l)) ⋀ τ('_n') ⋀ ↲(_r)",
            "details": "↲(Φ(getxDetails))",
            "paging": "↲(Φ(getxPaging))",
            "testChild": "(_re ≔ brotherOf({_y: 'Benjamin'})) ⋀ (_re ≔ parentOf({_child: 'Benjamin'}))",
            "parentOf": [
                "_child | (_pList ≔ []) ⋀ ((∀(_parent) ∈ childrenOf) ⋀ ",
                "(_child ∈ childrenOf[_parent]) ⋀ (_pList ≪ _parent)) ⋀ ↲(_pList)"
            ],
            "brotherOf": [
                "_y | (_bList ≔ []) ⋀ ((∀(_x) ∈ male) ⋀ (_x ≠ _y) ⋀ ",
                "((∃(_p) ∈ parentOf(_y)) ⋀ (_p ∈ parentOf(_x))) ⋀ (_bList ≪ _x)) ⋀ ",
                "↲(_bList)"
            ],
            "isBrother": "_x, _y | ↲(_x ∈ brotherOf(_y))",
            "printText": "printX('a') ⋀ printX3('a', 'b', 'c') ⋀ ↲(Φ(getxHome))",
            "childrenOf": "(_te ≔ childrenOf['Yeung']) ⋀ (_te1 ≔ (_te ⥹ 2)) ⋀ τ('_te1') ⋀ (_te2 ≔ (_te ⥻ 3)) ⋀ (_re ≔ (_te － _te2)) ⋀ (((_te1 ⊂ _te) ⋀ τ('_te2')) ⋁ (true)) ⋀ τ('_re') ⋀ ↲(Φ(getxHome))",
            "setListTest": "(_te ≔ {1, 2, 3, 4, 5, 6, 7}) ⋀ (_te1 ≔ (_te ⥹ 2)) ⋀ τ('_te1') ⋀ (_te2 ≔ (_te ⥻ 3)) ⋀ (_re ≔ (_te ⊖ _te2)) ⋀ (((_te1 ⊂ _te) ⋀ τ('_te2')) ⋁ (true)) ⋀ τ('_re') ⋀ ↲(Φ(getxHome))",
            "listInxTest": "(_te ≔ [1, 2, 3, 4, 5, 6, 7]) ⋀ (_te1 ≔ (_te ⥹ 2)) ⋀ τ('_te1') ⋀ (_te2 ≔ (_te ⥻ 3)) ⋀ (_re ≔ (_te － _te2)) ⋀ (_te2[1] ≫ _te1[1]) ⋀ (((_te1 ⊂ _te) ⋀ τ('_te2')) ⋁ (true)) ⋀ τ('_re') ⋀ ↲(Φ(getxHome))"
        }
    }
}